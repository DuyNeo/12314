@page "/MonAnDialog/{id}"
@using ASM.Server.Data
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IMonAnSvc _monAnService
@inject DataContext _context
@inject NavigationManager navigation
@inject IWebHostEnvironment env
<h3>@Tieude</h3>
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@monAn" OnValidSubmit="@SubmitForm">
            <DataAnnotationsValidator />
            <input type="hidden" @bind="monAn.Id">
            <div class="form-group">
                <label class="control-label">Ten mon an</label>
                <input @bind="monAn.Name" class="form-control" />
                <ValidationMessage For="@(() => monAn.Name)"></ValidationMessage>
            </div>

            <div class="form-group">
                <label class="control-label">gia mon an</label>
                <input @bind="monAn.Gia" class="form-control" />
                <ValidationMessage For="@(() => monAn.Gia)"></ValidationMessage>
            </div>
         
                <div class="form-group">
                    <label for="exampleInputEmail1" class="form-label">Phân loại</label>
                    <InputSelect class="form-control" @bind-Value="monAn.phanLoai" type="email">
                        @foreach (var pl in Enum.GetValues(typeof(MonAn.PhanLoai)))
                        {
                            <option value="@pl">@pl</option>
                        }
                    </InputSelect>
                </div>
                @try
                {
                    @if (monAn.Photos.Any() && id != "0")
                    {
                        <div class="d-flex flex-wrap photo-upload">
                            @foreach (var item in monAn.Photos)
                            {
                                <div class="photodetail w-25 p-1">
                                    <img class="w-100" src="images/food/@(item.FileName)" />
                                    <span class="btn btn-danger" @onclick="@(()=>Delete(@item.Id))">Delete</span>
                                </div>
                                @*<div class="form-group">
                        <img src="images/food/@(item.FileName)" class="w-25 photodetail"/>
                        </div>*@
                            }
                        </div>


                    }
                }
                catch
                {

                }

                @*<InputFile class="collapse"
        type="file"
        id="selectfileupload"
        OnChange="OnInputFileChange" />

        <span class="btn btn-primary" onclick="ClickButtoUpload()">Upload Hình ảnh</span>*@
                @if (id != "0")
                {
                    <div class="form-group">
                        <label class="custom-file-upload">
                            <InputFile class="form-control" OnChange="OnInputFileChange" id="file-upload" accept=".gif,.jpg,.jpeg,.png"></InputFile>
                            <i class="fa fa-cloud-upload"></i> Chọn ảnh
                        </label>
                        @*<label for="file-upload" class="form-label">Chọn hình</label>
                <InputFile class="form-control" OnChange="OnInputFileChange" id="file-upload"></InputFile>*@
                    </div>
                }

                <div class="form-control form-check">
                    <label class="col-form-label">
                        <input type="checkbox" class="form-group-input" @bind="monAn.TrangThai" />Trang thai
                    </label>
                </div>
                <div class="form-control">
                    <button type="submit" class="btn btn-info" @onclick="(() => SubmitForm())">Luu</button>
                    <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Thoat" />
                </div>
</EditForm>
    </div>
</div>
@code {
    [Parameter]
    public string id { get; set; }
    private MonAn monAn { get; set; }
    private string Tieude = "";
    IReadOnlyList<IBrowserFile> selectedFiles;
    protected override void OnInitialized()
    {
        if (string.IsNullOrWhiteSpace(id) || id == "0")
        {
            Tieude = "Them mon an";
            monAn = new MonAn();
        }
        else
        {
            Tieude = "Sua mon an";
            monAn = _monAnService.GetMonAn(int.Parse(id));
        }
    }
    private async void SubmitForm()
    {
        //if (selectedFiles != null && selectedFiles.Count > 0)
        //{
        //    var file = selectedFiles[0];
        //    //foreach (var file in selectedFiles)
        //    {
        //        Stream stream = file.OpenReadStream();
        //        var path = $"{env.WebRootPath}\\image\\Monan\\{file.Name}";
        //        FileStream fs = File.Create(path);
        //        await stream.CopyToAsync(fs);
        //        stream.Close();
        //        fs.Close();
        //    }
        //    //monAn.Photos = file.Name;
        //}
        if (monAn.Id == 0)
        {
            _monAnService.AddMonAn(monAn);
        }
        else
        {
            _monAnService.EditMonAn(monAn.Id, monAn);
        }
        navigation.NavigateTo("MonanList");
    }
    private void Cancel()
    {
        navigation.NavigateTo("MonanList", true);

    }

    public void Delete(int id)
    {
        var photo = _context.ProductPhotos.Where(p => p.Id == id).FirstOrDefault();
        if (photo != null)
        {
            _context.Remove(photo);
            _context.SaveChanges();

            var filename = "wwwroot/images/food/" + photo.FileName;
            System.IO.File.Delete(filename);
        }
    }
    IReadOnlyList<IBrowserFile> selectedFile;

    private async void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.GetMultipleFiles();

        if (selectedFile != null && selectedFile.Count > 0)
        {
            var file = selectedFile[0];

            var rootPath = $"{env.WebRootPath}\\images";
            if (!Directory.Exists(rootPath))
            {
                Directory.CreateDirectory(rootPath);
            }

            string dirPath = rootPath + @"\" + "food";
            if (!Directory.Exists(dirPath))
            {
                Directory.CreateDirectory(dirPath);
            }


            //var path = $"{env.WebRootPath}\\images\\food\\{file.Name}";
            string filePath = dirPath + @"\" + file.Name;
            var stream = file.OpenReadStream();
            var fs = File.Create(filePath);

            await stream.CopyToAsync(fs);
            stream.Close();
            fs.Close();
            var photo = new ProductPhoto()
            {
                ProductId = monAn.Id,
                FileName = file.Name
            };
            //var listphoto = new List<ProductPhoto>();
            //listphoto.Add(photo);
            //monan.Photos =  listphoto;
            _context.ProductPhotos.Add(photo);
            _context.SaveChanges();
            //toastService.ShowInfo($"Vừa thêm ảnh {file.Name} cho món {monAn.Name}");
        }
        this.StateHasChanged();
    }

}
