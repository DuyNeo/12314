// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ASM.Server.Pages.MonAns
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using ASM.Server;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\_Imports.razor"
using ASM.Server.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\Pages\MonAns\MonAnDialog.razor"
using ASM.Server.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\Pages\MonAns\MonAnDialog.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\Pages\MonAns\MonAnDialog.razor"
using Microsoft.AspNetCore.Hosting;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/MonAnDialog/{id}")]
    public partial class MonAnDialog : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 91 "C:\Users\hp\OneDrive\Máy tính\ASM.Share\ASM.Server\Pages\MonAns\MonAnDialog.razor"
       
    [Parameter]
    public string id { get; set; }
    private MonAn monAn { get; set; }
    private string Tieude = "";
    IReadOnlyList<IBrowserFile> selectedFiles;
    protected override void OnInitialized()
    {
        if (string.IsNullOrWhiteSpace(id) || id == "0")
        {
            Tieude = "Them mon an";
            monAn = new MonAn();
        }
        else
        {
            Tieude = "Sua mon an";
            monAn = _monAnService.GetMonAn(int.Parse(id));
        }
    }
    private async void SubmitForm()
    {
        //if (selectedFiles != null && selectedFiles.Count > 0)
        //{
        //    var file = selectedFiles[0];
        //    //foreach (var file in selectedFiles)
        //    {
        //        Stream stream = file.OpenReadStream();
        //        var path = $"{env.WebRootPath}\\image\\Monan\\{file.Name}";
        //        FileStream fs = File.Create(path);
        //        await stream.CopyToAsync(fs);
        //        stream.Close();
        //        fs.Close();
        //    }
        //    //monAn.Photos = file.Name;
        //}
        if (monAn.Id == 0)
        {
            _monAnService.AddMonAn(monAn);
        }
        else
        {
            _monAnService.EditMonAn(monAn.Id, monAn);
        }
        navigation.NavigateTo("MonanList");
    }
    private void Cancel()
    {
        navigation.NavigateTo("MonanList", true);

    }

    public void Delete(int id)
    {
        var photo = _context.ProductPhotos.Where(p => p.Id == id).FirstOrDefault();
        if (photo != null)
        {
            _context.Remove(photo);
            _context.SaveChanges();

            var filename = "wwwroot/images/food/" + photo.FileName;
            System.IO.File.Delete(filename);
        }
    }
    IReadOnlyList<IBrowserFile> selectedFile;

    private async void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.GetMultipleFiles();

        if (selectedFile != null && selectedFile.Count > 0)
        {
            var file = selectedFile[0];

            var rootPath = $"{env.WebRootPath}\\images";
            if (!Directory.Exists(rootPath))
            {
                Directory.CreateDirectory(rootPath);
            }

            string dirPath = rootPath + @"\" + "food";
            if (!Directory.Exists(dirPath))
            {
                Directory.CreateDirectory(dirPath);
            }


            //var path = $"{env.WebRootPath}\\images\\food\\{file.Name}";
            string filePath = dirPath + @"\" + file.Name;
            var stream = file.OpenReadStream();
            var fs = File.Create(filePath);

            await stream.CopyToAsync(fs);
            stream.Close();
            fs.Close();
            var photo = new ProductPhoto()
            {
                ProductId = monAn.Id,
                FileName = file.Name
            };
            //var listphoto = new List<ProductPhoto>();
            //listphoto.Add(photo);
            //monan.Photos =  listphoto;
            _context.ProductPhotos.Add(photo);
            _context.SaveChanges();
            //toastService.ShowInfo($"Vừa thêm ảnh {file.Name} cho món {monAn.Name}");
        }
        this.StateHasChanged();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IWebHostEnvironment env { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigation { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DataContext _context { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMonAnSvc _monAnService { get; set; }
    }
}
#pragma warning restore 1591
